"""add payment table

Revision ID: a701b70f8062
Revises: cf4add29bdfc
Create Date: 2025-08-14 17:23:21.917603

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a701b70f8062'
down_revision: Union[str, Sequence[str], None] = 'cf4add29bdfc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('movie_rating')
    op.drop_table('movie_directors')
    op.drop_table('payment_items')
    op.drop_table('directors')
    op.drop_table('user_groups')
    op.drop_table('movie_comments')
    op.drop_table('movie_comment_replies')
    with op.batch_alter_table('movies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_movies_name'))
        batch_op.drop_index(batch_op.f('ix_movies_year'))

    op.drop_table('movies')
    op.drop_table('movie_genres')
    op.drop_table('movie_stars')
    op.drop_table('users')
    op.drop_table('stars')
    op.drop_table('password_reset_tokens')
    op.drop_table('movie_comment_likes')
    op.drop_table('refresh_tokens')
    op.drop_table('activation_tokens')
    op.drop_table('genres')
    op.drop_table('payments')
    op.drop_table('order_items')
    op.drop_table('cart_items')
    op.drop_table('orders')
    op.drop_table('certifications')
    op.drop_table('movie_rate_in_stars')
    op.drop_table('movie_favorites')
    op.drop_table('carts')
    op.drop_table('user_profiles')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_profiles',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=60), nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=60), nullable=True),
    sa.Column('avatar', sa.VARCHAR(length=300), nullable=True),
    sa.Column('gender', sa.VARCHAR(length=5), nullable=True),
    sa.Column('date_of_birth', sa.DATE(), nullable=True),
    sa.Column('info', sa.VARCHAR(length=200), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('carts',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_profile_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_profile_id')
    )
    op.create_table('movie_favorites',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('movie_id', sa.INTEGER(), nullable=True),
    sa.Column('user_profile_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('movie_id', 'user_profile_id')
    )
    op.create_table('movie_rate_in_stars',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_profile_id', sa.INTEGER(), nullable=True),
    sa.Column('movie_id', sa.INTEGER(), nullable=True),
    sa.Column('rate', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_profile_id', 'movie_id')
    )
    op.create_table('certifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_profile_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('status', sa.VARCHAR(length=8), nullable=True),
    sa.Column('total_amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cart_items',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('cart_id', sa.INTEGER(), nullable=False),
    sa.Column('movie_id', sa.INTEGER(), nullable=False),
    sa.Column('added_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cart_id', 'movie_id')
    )
    op.create_table('order_items',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('order_id', sa.INTEGER(), nullable=False),
    sa.Column('movie_id', sa.INTEGER(), nullable=False),
    sa.Column('price_at_order', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_profile_id', sa.INTEGER(), nullable=False),
    sa.Column('order_id', sa.INTEGER(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('status', sa.VARCHAR(length=10), nullable=True),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('external_payment_id', sa.VARCHAR(length=400), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('genres',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('activation_tokens',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('token', sa.VARCHAR(length=100), nullable=True),
    sa.Column('expires_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('refresh_tokens',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('token', sa.VARCHAR(length=300), nullable=True),
    sa.Column('expires_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('movie_comment_likes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('comment_id', sa.INTEGER(), nullable=True),
    sa.Column('user_profile_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['movie_comments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('comment_id', 'user_profile_id')
    )
    op.create_table('password_reset_tokens',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('token', sa.VARCHAR(length=300), nullable=True),
    sa.Column('expires_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token')
    )
    op.create_table('stars',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=150), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('group_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['user_groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('movie_stars',
    sa.Column('movie_id', sa.INTEGER(), nullable=False),
    sa.Column('stars_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.ForeignKeyConstraint(['stars_id'], ['stars.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'stars_id')
    )
    op.create_table('movie_genres',
    sa.Column('movie_id', sa.INTEGER(), nullable=False),
    sa.Column('genre_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'genre_id')
    )
    op.create_table('movies',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('uuid', sa.VARCHAR(length=200), nullable=True),
    sa.Column('name', sa.VARCHAR(length=200), nullable=False),
    sa.Column('year', sa.INTEGER(), nullable=False),
    sa.Column('time', sa.INTEGER(), nullable=False),
    sa.Column('imdb', sa.FLOAT(), nullable=False),
    sa.Column('votes', sa.INTEGER(), nullable=False),
    sa.Column('meta_score', sa.FLOAT(), nullable=True),
    sa.Column('gross', sa.FLOAT(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=13, scale=2), nullable=True),
    sa.Column('certification_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['certification_id'], ['certifications.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'year', 'time'),
    sa.UniqueConstraint('uuid')
    )
    with op.batch_alter_table('movies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_movies_year'), ['year'], unique=False)
        batch_op.create_index(batch_op.f('ix_movies_name'), ['name'], unique=False)

    op.create_table('movie_comment_replies',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('comment_id', sa.INTEGER(), nullable=True),
    sa.Column('user_profile_id', sa.INTEGER(), nullable=True),
    sa.Column('text', sa.VARCHAR(length=500), nullable=False),
    sa.Column('votes', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['movie_comments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('movie_comments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_profile_id', sa.INTEGER(), nullable=True),
    sa.Column('votes', sa.INTEGER(), nullable=True),
    sa.Column('movie_id', sa.INTEGER(), nullable=True),
    sa.Column('text', sa.VARCHAR(length=500), nullable=False),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_groups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=9), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('directors',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('payment_items',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('payment_id', sa.INTEGER(), nullable=False),
    sa.Column('order_item_id', sa.INTEGER(), nullable=False),
    sa.Column('price_at_payment', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['order_item_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_item_id')
    )
    op.create_table('movie_directors',
    sa.Column('movie_id', sa.INTEGER(), nullable=False),
    sa.Column('director_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['director_id'], ['directors.id'], ),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.PrimaryKeyConstraint('movie_id', 'director_id')
    )
    op.create_table('movie_rating',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_profile_id', sa.INTEGER(), nullable=True),
    sa.Column('movie_id', sa.INTEGER(), nullable=True),
    sa.Column('rating', sa.VARCHAR(length=7), nullable=True),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_profile_id'], ['user_profiles.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_profile_id', 'movie_id')
    )
    # ### end Alembic commands ###
